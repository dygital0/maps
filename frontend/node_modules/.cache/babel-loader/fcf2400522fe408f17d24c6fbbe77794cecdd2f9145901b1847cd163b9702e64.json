{"ast":null,"code":"var _jsxFileName = \"F:\\\\gps-web-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { getRoute } from './tomtomService';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [start, setStart] = useState('51.505,-0.09');\n  const [end, setEnd] = useState('51.51,-0.1');\n  const [map, setMap] = useState(null);\n  const [costs, setCosts] = useState({\n    gameTheory: 0,\n    chaosTheory: 0\n  });\n  const mapInitializedRef = useRef(false);\n  const mapContainerRef = useRef(null);\n  useEffect(() => {\n    const initMap = () => {\n      const mapInstance = L.map(mapContainerRef.current).setView([51.505, -0.09], 13);\n      L.tileLayer('https://api.tomtom.com/map/1/tile/basic/main/{z}/{x}/{y}.png?key=YOUR_API_KEY', {\n        attribution: '&copy; TomTom'\n      }).addTo(mapInstance);\n      setMap(mapInstance);\n      mapInitializedRef.current = true;\n    };\n    if (!mapInitializedRef.current) {\n      initMap();\n    }\n    return () => {\n      if (map) {\n        map.remove();\n        setMap(null);\n      }\n    };\n  }, [map]);\n  const handleRouteFetch = async () => {\n    const parsedStart = start.split(',').map(Number);\n    const parsedEnd = end.split(',').map(Number);\n    if (parsedStart.some(isNaN) || parsedEnd.some(isNaN)) {\n      console.error(\"Invalid coordinates\");\n      return; // Early exit\n    }\n    const routeData = await getRoute(start, end);\n    if (map) {\n      // Clear existing layers if necessary\n      map.eachLayer(layer => {\n        if (layer instanceof L.Polyline) {\n          map.removeLayer(layer);\n        }\n      });\n      const latLngs = routeData.legs[0].points.map(point => [point.latitude, point.longitude]);\n      const polyline = L.polyline(latLngs, {\n        color: 'blue'\n      }).addTo(map);\n      map.fitBounds(polyline.getBounds());\n\n      // Calculate costs based on routeData or other criteria\n      const gameTheoryCost = calculateGameTheoryCost(routeData);\n      const chaosTheoryCost = calculateChaosTheoryCost(routeData);\n      setCosts({\n        gameTheory: gameTheoryCost,\n        chaosTheory: chaosTheoryCost\n      });\n    }\n  };\n  const calculateGameTheoryCost = routeData => {\n    // Your logic for calculating game theory cost\n    // Example return\n    return 100; // Replace with actual logic\n  };\n  const calculateChaosTheoryCost = routeData => {\n    // Your logic for calculating chaos theory cost\n    // Example return\n    return 150; // Replace with actual logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GPS Routing with TomTom API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: start,\n        onChange: e => setStart(e.target.value),\n        placeholder: \"Start (lat,long)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: end,\n        onChange: e => setEnd(e.target.value),\n        placeholder: \"End (lat,long)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRouteFetch,\n        children: \"Get Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      id: \"map\",\n      className: \"map-container\",\n      style: {\n        width: '100%',\n        height: '600px',\n        position: 'relative'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cost-estimates\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cost Estimates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Game Theory Cost: $\", costs.gameTheory]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Chaos Theory Cost: $\", costs.chaosTheory]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"eqHS1pX2Hgydz1dQC3Bj6H+tm9k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","getRoute","L","jsxDEV","_jsxDEV","App","_s","start","setStart","end","setEnd","map","setMap","costs","setCosts","gameTheory","chaosTheory","mapInitializedRef","mapContainerRef","initMap","mapInstance","current","setView","tileLayer","attribution","addTo","remove","handleRouteFetch","parsedStart","split","Number","parsedEnd","some","isNaN","console","error","routeData","eachLayer","layer","Polyline","removeLayer","latLngs","legs","points","point","latitude","longitude","polyline","color","fitBounds","getBounds","gameTheoryCost","calculateGameTheoryCost","chaosTheoryCost","calculateChaosTheoryCost","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","ref","id","style","width","height","position","_c","$RefreshReg$"],"sources":["F:/gps-web-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { getRoute } from './tomtomService';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css';\n\nfunction App() {\n    const [start, setStart] = useState('51.505,-0.09');\n    const [end, setEnd] = useState('51.51,-0.1');\n    const [map, setMap] = useState(null);\n    const [costs, setCosts] = useState({ gameTheory: 0, chaosTheory: 0 });\n    const mapInitializedRef = useRef(false);\n    const mapContainerRef = useRef(null);\n\n    useEffect(() => {\n        const initMap = () => {\n            const mapInstance = L.map(mapContainerRef.current).setView([51.505, -0.09], 13);\n            L.tileLayer('https://api.tomtom.com/map/1/tile/basic/main/{z}/{x}/{y}.png?key=YOUR_API_KEY', {\n                attribution: '&copy; TomTom'\n            }).addTo(mapInstance);\n            setMap(mapInstance);\n            mapInitializedRef.current = true;\n        };\n\n        if (!mapInitializedRef.current) {\n            initMap();\n        }\n\n        return () => {\n            if (map) {\n                map.remove();\n                setMap(null);\n            }\n        };\n    }, [map]);\n\n    const handleRouteFetch = async () => {\n        const parsedStart = start.split(',').map(Number);\n        const parsedEnd = end.split(',').map(Number);\n\n        if (parsedStart.some(isNaN) || parsedEnd.some(isNaN)) {\n            console.error(\"Invalid coordinates\");\n            return; // Early exit\n        }\n\n        const routeData = await getRoute(start, end);\n        if (map) {\n            // Clear existing layers if necessary\n            map.eachLayer((layer) => {\n                if (layer instanceof L.Polyline) {\n                    map.removeLayer(layer);\n                }\n            });\n\n            const latLngs = routeData.legs[0].points.map(point => [point.latitude, point.longitude]);\n            const polyline = L.polyline(latLngs, { color: 'blue' }).addTo(map);\n            map.fitBounds(polyline.getBounds());\n\n            // Calculate costs based on routeData or other criteria\n            const gameTheoryCost = calculateGameTheoryCost(routeData);\n            const chaosTheoryCost = calculateChaosTheoryCost(routeData);\n\n            setCosts({ gameTheory: gameTheoryCost, chaosTheory: chaosTheoryCost });\n        }\n    };\n\n    const calculateGameTheoryCost = (routeData) => {\n        // Your logic for calculating game theory cost\n        // Example return\n        return 100; // Replace with actual logic\n    };\n\n    const calculateChaosTheoryCost = (routeData) => {\n        // Your logic for calculating chaos theory cost\n        // Example return\n        return 150; // Replace with actual logic\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>GPS Routing with TomTom API</h1>\n            <div className=\"input-container\">\n                <input\n                    type=\"text\"\n                    value={start}\n                    onChange={(e) => setStart(e.target.value)}\n                    placeholder=\"Start (lat,long)\"\n                />\n                <input\n                    type=\"text\"\n                    value={end}\n                    onChange={(e) => setEnd(e.target.value)}\n                    placeholder=\"End (lat,long)\"\n                />\n                <button onClick={handleRouteFetch}>Get Route</button>\n            </div>\n            <div ref={mapContainerRef} id=\"map\" className=\"map-container\" style={{ width: '100%', height: '600px', position: 'relative' }}></div>\n            <div className=\"cost-estimates\">\n                <h2>Cost Estimates</h2>\n                <p>Game Theory Cost: ${costs.gameTheory}</p>\n                <p>Chaos Theory Cost: ${costs.chaosTheory}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}